name: CI

on: [push, pull_request]

jobs:
  pre-commit:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies (apt)
        run: |
          sudo apt update
          sudo apt install \
            fontconfig    \
            imagemagick   \
            libgeos++-dev \
            libproj-dev   \
            poppler-utils \
            texlive-extra-utils
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip/
          key: ${{ runner.os }}-pip-${{ hashFiles('./requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements (pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt
      - name: Install fonts
        run: |
          sudo apt install \
            fonts-crosextra-carlito
          make -C fonts/
          cp -r fonts/ /usr/share/fonts/
          fc-cache
      - name: Install Tectonic
        run: |
          conda install -c conda-forge tectonic
      - name: Build artifacts
        run: |
          # adjust the ImageMagick policies to convert PDF to PNG
          # remove all policies restricting Ghostscript ability to process files
          # https://stackoverflow.com/q/52998331
          # https://stackoverflow.com/a/59193253
          sudo sed -i '/disable ghostscript format types/,+6d' /etc/ImageMagick-6/policy.xml
          #
          LATEX_COMPILER=tectonic make all
      - name: Check layouts
        run: |
          set -x
          [[ "$(pdfinfo cheatsheets.pdf          | grep Pages | awk '{print $2}')" == "2" ]] || exit 1
          [[ "$(pdfinfo handout-tips.pdf         | grep Pages | awk '{print $2}')" == "1" ]] || exit 1
          [[ "$(pdfinfo handout-beginner.pdf     | grep Pages | awk '{print $2}')" == "1" ]] || exit 1
          [[ "$(pdfinfo handout-intermediate.pdf | grep Pages | awk '{print $2}')" == "1" ]] || exit 1
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: build
          path: |
            cheatsheets.pdf
            handout-*.pdf
      - name: Publish cheatsheets and handouts
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/
          force_orphan: true
